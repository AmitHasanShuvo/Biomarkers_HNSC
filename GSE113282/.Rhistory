data <- read.csv("GSE113282.csv", row.names=1)
alpha <- 0.05
cnt <- 0
names <- vector('character')
pvals <- vector('numeric')
abslogFC <- vector('numeric')
for (i in 1:nrow(data)){
vec1 = as.numeric(data[i:i,1:39])
vec2 = as.numeric(data[i:i,40:78])
# print(i)
#print(vec1)
#vec2
#vec1 = log2(vec1)
#vec2 = log2(vec2)
#logFC = abs(mean(log2(vec1)) - mean(log2(vec2)))
#vec1 = scale(vec1)
#vec2 = scale(vec2)
#vec1 = vec1 - mean(vec1)
#vec2 = vec2 - mean(vec2)
#vec1 = scale(vec1)
#vec2 = scale(vec2)
tt=t.test(vec1, vec2)
#tt = kruskal.test(list(vec1, vec2))
#tt=wilcox.test(vec1,vec2)
names <- c(names, row.names(data)[i])
pvals <- c(pvals, tt$p.value)
#abslogFC <- c(abslogFC, logFC)
#print(tt$p.value)
#break
}
padjusted_holm = p.adjust(pvals, method = "holm")
padjusted_hochberg = p.adjust(pvals, method = "hochberg")
padjusted_hommel = p.adjust(pvals, method = "hommel")
padjusted_bonferroni = p.adjust(pvals, method = "bonferroni")
padjusted_BH = p.adjust(pvals, method = "BH")
padjusted_BY = p.adjust(pvals, method = "BY")
padjusted_fdr = p.adjust(pvals, method = "fdr")
padjusted_none = p.adjust(pvals, method = "none")
res = data.frame("Gene"=names, "p-value"=pvals, "P-adjusted Holm"=padjusted_holm, "P-adjusted Hochberg"=padjusted_hochberg, "P-adjusted Hommel"=padjusted_hommel, "P-adjusted Boneferroni"=padjusted_bonferroni, "P-adjusted BH"=padjusted_BH, "P-adjusted BY"=padjusted_BY, "P-adjusted Fdr"=padjusted_fdr, "P-adjusted None"=padjusted_none)
write.csv(res, file="GSE113282-Adjusted-Pvals-All-Methods-T-Test.csv")
data <- read.csv("GSE113282.csv", row.names=1)
alpha <- 0.05
cnt <- 0
names <- vector('character')
pvals <- vector('numeric')
abslogFC <- vector('numeric')
for (i in 1:nrow(data)){
vec1 = as.numeric(data[i:i,1:39])
vec2 = as.numeric(data[i:i,40:78])
# print(i)
#print(vec1)
#vec2
#vec1 = log2(vec1)
#vec2 = log2(vec2)
#logFC = abs(mean(log2(vec1)) - mean(log2(vec2)))
#vec1 = scale(vec1)
#vec2 = scale(vec2)
#vec1 = vec1 - mean(vec1)
#vec2 = vec2 - mean(vec2)
#vec1 = scale(vec1)
#vec2 = scale(vec2)
tt=t.test(vec1, vec2)
#tt = kruskal.test(list(vec1, vec2))
#tt=wilcox.test(vec1,vec2)
names <- c(names, row.names(data)[i])
pvals <- c(pvals, tt$p.value)
#abslogFC <- c(abslogFC, logFC)
#print(tt$p.value)
#break
}
padjusted_holm = p.adjust(pvals, method = "holm")
padjusted_hochberg = p.adjust(pvals, method = "hochberg")
padjusted_hommel = p.adjust(pvals, method = "hommel")
padjusted_bonferroni = p.adjust(pvals, method = "bonferroni")
padjusted_BH = p.adjust(pvals, method = "BH")
padjusted_BY = p.adjust(pvals, method = "BY")
padjusted_fdr = p.adjust(pvals, method = "fdr")
padjusted_none = p.adjust(pvals, method = "none")
res = data.frame("Gene"=names, "p-value"=pvals, "P-adjusted Holm"=padjusted_holm, "P-adjusted Hochberg"=padjusted_hochberg, "P-adjusted Hommel"=padjusted_hommel, "P-adjusted Boneferroni"=padjusted_bonferroni, "P-adjusted BH"=padjusted_BH, "P-adjusted BY"=padjusted_BY, "P-adjusted Fdr"=padjusted_fdr, "P-adjusted None"=padjusted_none)
write.csv(res, file="GSE113282-Adjusted-Pvals-All-Methods-T-Test.csv")
